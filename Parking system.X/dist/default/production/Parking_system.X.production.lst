

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Aug 23 17:32:27 2021

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     	;# 
    15  0001                     	;# 
    16  0002                     	;# 
    17  0003                     	;# 
    18  0004                     	;# 
    19  0005                     	;# 
    20  0006                     	;# 
    21  0007                     	;# 
    22  0008                     	;# 
    23  0009                     	;# 
    24  000A                     	;# 
    25  000B                     	;# 
    26  000C                     	;# 
    27  000D                     	;# 
    28  000E                     	;# 
    29  000E                     	;# 
    30  000F                     	;# 
    31  0010                     	;# 
    32  0011                     	;# 
    33  0012                     	;# 
    34  0013                     	;# 
    35  0014                     	;# 
    36  0015                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0017                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001B                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  001D                     	;# 
    47  001E                     	;# 
    48  001F                     	;# 
    49  0081                     	;# 
    50  0085                     	;# 
    51  0086                     	;# 
    52  0087                     	;# 
    53  0088                     	;# 
    54  0089                     	;# 
    55  008C                     	;# 
    56  008D                     	;# 
    57  008E                     	;# 
    58  0091                     	;# 
    59  0092                     	;# 
    60  0093                     	;# 
    61  0094                     	;# 
    62  0098                     	;# 
    63  0099                     	;# 
    64  009C                     	;# 
    65  009D                     	;# 
    66  009E                     	;# 
    67  009F                     	;# 
    68  010C                     	;# 
    69  010D                     	;# 
    70  010E                     	;# 
    71  010F                     	;# 
    72  018C                     	;# 
    73  018D                     	;# 
    74  000E                     _TMR1	set	14
    75  0008                     _PORTD	set	8
    76  0008                     _PORTDbits	set	8
    77  005F                     _GIE	set	95
    78  005E                     _PEIE	set	94
    79  0030                     _RB0	set	48
    80  0031                     _RB1	set	49
    81  0032                     _RB2	set	50
    82  0033                     _RB3	set	51
    83  0034                     _RB4	set	52
    84  0084                     _T1CKPS0	set	132
    85  0085                     _T1CKPS1	set	133
    86  0081                     _TMR1CS	set	129
    87  0060                     _TMR1IF	set	96
    88  0080                     _TMR1ON	set	128
    89  0086                     _TRISB	set	134
    90  0088                     _TRISD	set	136
    91  0460                     _TMR1IE	set	1120
    92                           
    93                           ; #config settings
    94  0000                     
    95                           	psect	cinit
    96  0015                     start_initialization:	
    97  0015                     __initialization:	
    98                           
    99                           ; Clear objects allocated to COMMON
   100  0015  01F0               	clrf	__pbssCOMMON& (0+127)
   101  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   102  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   103  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   104  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   105  001A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   106  001B  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   107  001C  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   108  001D  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
   109  001E  01F9               	clrf	(__pbssCOMMON+9)& (0+127)
   110                           
   111                           ; Clear objects allocated to BANK0
   112  001F  01A0               	clrf	__pbssBANK0& (0+127)
   113  0020  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   114  0021  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   115  0022  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   116  0023  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   117  0024  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   118  0025  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   119  0026  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   120  0027  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   121  0028  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   122  0029                     end_of_initialization:	
   123                           ;End of C runtime variable initialization code
   124                           
   125  0029                     __end_of__initialization:	
   126  0029  0183               	clrf	3
   127  002A  120A  118A  2899   	ljmp	_main	;jump to C main() function
   128                           
   129                           	psect	bssCOMMON
   130  0070                     __pbssCOMMON:	
   131  0070                     _a:	
   132  0070                     	ds	2
   133  0072                     _b:	
   134  0072                     	ds	2
   135  0074                     _c:	
   136  0074                     	ds	2
   137  0076                     _d:	
   138  0076                     	ds	2
   139  0078                     _e:	
   140  0078                     	ds	2
   141                           
   142                           	psect	bssBANK0
   143  0020                     __pbssBANK0:	
   144  0020                     _a1:	
   145  0020                     	ds	2
   146  0022                     _b1:	
   147  0022                     	ds	2
   148  0024                     _c1:	
   149  0024                     	ds	2
   150  0026                     _d1:	
   151  0026                     	ds	2
   152  0028                     _e1:	
   153  0028                     	ds	2
   154                           
   155                           	psect	cstackCOMMON
   156  007A                     __pcstackCOMMON:	
   157  007A                     ?_Timer1:	
   158  007A                     ?_main:	
   159                           ; 1 bytes @ 0x0
   160                           
   161  007A                     ?_ISR:	
   162                           ; 1 bytes @ 0x0
   163                           
   164  007A                     ??_ISR:	
   165                           ; 1 bytes @ 0x0
   166                           
   167                           
   168                           ; 1 bytes @ 0x0
   169  007A                     	ds	4
   170                           
   171                           	psect	cstackBANK0
   172  0000                     __pcstackBANK0:	
   173  0000                     ??_Timer1:	
   174  0000                     ??_main:	
   175                           ; 1 bytes @ 0x0
   176                           
   177                           
   178                           	psect	maintext
   179  0099                     __pmaintext:	
   180                           ; 1 bytes @ 0x0
   181 ;;
   182 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   183 ;;
   184 ;; *************** function _main *****************
   185 ;; Defined at:
   186 ;;		line 11 in file "main.c"
   187 ;; Parameters:    Size  Location     Type
   188 ;;		None
   189 ;; Auto vars:     Size  Location     Type
   190 ;;		None
   191 ;; Return value:  Size  Location     Type
   192 ;;                  1    wreg      void 
   193 ;; Registers used:
   194 ;;		wreg, status,2, status,0, pclath, cstack
   195 ;; Tracked objects:
   196 ;;		On entry : B00/0
   197 ;;		On exit  : 0/0
   198 ;;		Unchanged: 0/0
   199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   200 ;;      Params:         0       0       0       0       0
   201 ;;      Locals:         0       0       0       0       0
   202 ;;      Temps:          0       0       0       0       0
   203 ;;      Totals:         0       0       0       0       0
   204 ;;Total ram usage:        0 bytes
   205 ;; Hardware stack levels required when called:    2
   206 ;; This function calls:
   207 ;;		_Timer1
   208 ;; This function is called by:
   209 ;;		Startup code after reset
   210 ;; This function uses a non-reentrant model
   211 ;;
   212                           
   213                           
   214                           ;psect for function _main
   215  0099                     _main:	
   216                           
   217                           ;main.c: 12: TRISB = 0xff;
   218                           
   219                           ;incstack = 0
   220                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   221  0099  30FF               	movlw	255
   222  009A  1683               	bsf	3,5	;RP0=1, select bank1
   223  009B  1303               	bcf	3,6	;RP1=0, select bank1
   224  009C  0086               	movwf	6	;volatile
   225                           
   226                           ;main.c: 13: TRISD = 0x00;
   227  009D  0188               	clrf	8	;volatile
   228                           
   229                           ;main.c: 14: PORTD = 0x00;
   230  009E  1283               	bcf	3,5	;RP0=0, select bank0
   231  009F  1303               	bcf	3,6	;RP1=0, select bank0
   232  00A0  0188               	clrf	8	;volatile
   233                           
   234                           ;main.c: 15: Timer1();
   235  00A1  120A  118A  20D6  120A  118A  	fcall	_Timer1
   236  00A6                     l747:	
   237                           ;main.c: 17: while(1)
   238                           
   239                           
   240                           ;main.c: 18: {
   241                           ;main.c: 20: if(RB0){
   242  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   243  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   244  00A8  1C06               	btfss	6,0	;volatile
   245  00A9  28B1               	goto	l755
   246                           
   247                           ;main.c: 21: a = 0;
   248  00AA  01F0               	clrf	_a
   249  00AB  01F1               	clrf	_a+1
   250                           
   251                           ;main.c: 22: a1=1;
   252  00AC  3001               	movlw	1
   253  00AD  00A0               	movwf	_a1
   254  00AE  3000               	movlw	0
   255  00AF  00A1               	movwf	_a1+1
   256                           
   257                           ;main.c: 23: PORTDbits.RD0=1;
   258  00B0  1408               	bsf	8,0	;volatile
   259  00B1                     l755:	
   260                           
   261                           ;main.c: 24: }
   262                           ;main.c: 25: if(RB1){
   263  00B1  1C86               	btfss	6,1	;volatile
   264  00B2  28BA               	goto	l763
   265                           
   266                           ;main.c: 26: b = 0;
   267  00B3  01F2               	clrf	_b
   268  00B4  01F3               	clrf	_b+1
   269                           
   270                           ;main.c: 27: b1=1;
   271  00B5  3001               	movlw	1
   272  00B6  00A2               	movwf	_b1
   273  00B7  3000               	movlw	0
   274  00B8  00A3               	movwf	_b1+1
   275                           
   276                           ;main.c: 28: PORTDbits.RD1=1;
   277  00B9  1488               	bsf	8,1	;volatile
   278  00BA                     l763:	
   279                           
   280                           ;main.c: 29: }
   281                           ;main.c: 30: if(RB2){
   282  00BA  1D06               	btfss	6,2	;volatile
   283  00BB  28C3               	goto	l771
   284                           
   285                           ;main.c: 31: c = 0;
   286  00BC  01F4               	clrf	_c
   287  00BD  01F5               	clrf	_c+1
   288                           
   289                           ;main.c: 32: c1=1;
   290  00BE  3001               	movlw	1
   291  00BF  00A4               	movwf	_c1
   292  00C0  3000               	movlw	0
   293  00C1  00A5               	movwf	_c1+1
   294                           
   295                           ;main.c: 33: PORTDbits.RD2=1;
   296  00C2  1508               	bsf	8,2	;volatile
   297  00C3                     l771:	
   298                           
   299                           ;main.c: 34: }
   300                           ;main.c: 35: if(RB3){
   301  00C3  1D86               	btfss	6,3	;volatile
   302  00C4  28CC               	goto	l779
   303                           
   304                           ;main.c: 36: d = 0;
   305  00C5  01F6               	clrf	_d
   306  00C6  01F7               	clrf	_d+1
   307                           
   308                           ;main.c: 37: d1=1;
   309  00C7  3001               	movlw	1
   310  00C8  00A6               	movwf	_d1
   311  00C9  3000               	movlw	0
   312  00CA  00A7               	movwf	_d1+1
   313                           
   314                           ;main.c: 38: PORTDbits.RD3=1;
   315  00CB  1588               	bsf	8,3	;volatile
   316  00CC                     l779:	
   317                           
   318                           ;main.c: 39: }
   319                           ;main.c: 40: if(RB4){
   320  00CC  1E06               	btfss	6,4	;volatile
   321  00CD  28A6               	goto	l747
   322                           
   323                           ;main.c: 41: e = 0;
   324  00CE  01F8               	clrf	_e
   325  00CF  01F9               	clrf	_e+1
   326                           
   327                           ;main.c: 42: e1=1;
   328  00D0  3001               	movlw	1
   329  00D1  00A8               	movwf	_e1
   330  00D2  3000               	movlw	0
   331  00D3  00A9               	movwf	_e1+1
   332                           
   333                           ;main.c: 43: PORTDbits.RD4=1;
   334  00D4  1608               	bsf	8,4	;volatile
   335  00D5  28A6               	goto	l747
   336  00D6                     __end_of_main:	
   337                           ;main.c: 44: }
   338                           ;main.c: 48: }
   339                           ;main.c: 49: return;
   340                           
   341                           
   342                           	psect	text1
   343  00D6                     __ptext1:	
   344 ;; *************** function _Timer1 *****************
   345 ;; Defined at:
   346 ;;		line 52 in file "main.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		None
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   360 ;;      Params:         0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0
   363 ;;      Totals:         0       0       0       0       0
   364 ;;Total ram usage:        0 bytes
   365 ;; Hardware stack levels used:    1
   366 ;; Hardware stack levels required when called:    1
   367 ;; This function calls:
   368 ;;		Nothing
   369 ;; This function is called by:
   370 ;;		_main
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           
   375                           ;psect for function _Timer1
   376  00D6                     _Timer1:	
   377                           
   378                           ;main.c: 54: TMR1IE=1;
   379                           
   380                           ;incstack = 0
   381                           ; Regs used in _Timer1: []
   382  00D6  1683               	bsf	3,5	;RP0=1, select bank1
   383  00D7  1303               	bcf	3,6	;RP1=0, select bank1
   384  00D8  140C               	bsf	12,0	;volatile
   385                           
   386                           ;main.c: 55: PEIE=1;
   387  00D9  170B               	bsf	11,6	;volatile
   388                           
   389                           ;main.c: 56: GIE=1;
   390  00DA  178B               	bsf	11,7	;volatile
   391                           
   392                           ;main.c: 59: TMR1=15536;
   393  00DB  303C               	movlw	60
   394  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   395  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   396  00DE  008F               	movwf	15	;volatile
   397  00DF  30B0               	movlw	176
   398  00E0  008E               	movwf	14	;volatile
   399                           
   400                           ;main.c: 61: TMR1CS=0;
   401  00E1  1090               	bcf	16,1	;volatile
   402                           
   403                           ;main.c: 63: T1CKPS0=0;
   404  00E2  1210               	bcf	16,4	;volatile
   405                           
   406                           ;main.c: 64: T1CKPS1=0;
   407  00E3  1290               	bcf	16,5	;volatile
   408                           
   409                           ;main.c: 66: TMR1ON=1;
   410  00E4  1410               	bsf	16,0	;volatile
   411  00E5  0008               	return
   412  00E6                     __end_of_Timer1:	
   413                           
   414                           	psect	text2
   415  002D                     __ptext2:	
   416 ;; *************** function _ISR *****************
   417 ;; Defined at:
   418 ;;		line 77 in file "main.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;		None
   421 ;; Auto vars:     Size  Location     Type
   422 ;;		None
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, status,2, status,0
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   432 ;;      Params:         0       0       0       0       0
   433 ;;      Locals:         0       0       0       0       0
   434 ;;      Temps:          4       0       0       0       0
   435 ;;      Totals:         4       0       0       0       0
   436 ;;Total ram usage:        4 bytes
   437 ;; Hardware stack levels used:    1
   438 ;; This function calls:
   439 ;;		Nothing
   440 ;; This function is called by:
   441 ;;		Interrupt level 1
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           
   446                           ;psect for function _ISR
   447  002D                     _ISR:	
   448                           
   449                           ;main.c: 79: if(TMR1IF)
   450  002D  1C0C               	btfss	12,0	;volatile
   451  002E  288E               	goto	L1
   452                           
   453                           ;main.c: 80: {
   454                           ;main.c: 81: TMR1=15536;
   455  002F  303C               	movlw	60
   456  0030  008F               	movwf	15	;volatile
   457  0031  30B0               	movlw	176
   458  0032  008E               	movwf	14	;volatile
   459                           
   460                           ;main.c: 82: a++;
   461  0033  3001               	movlw	1
   462  0034  07F0               	addwf	_a,f
   463  0035  1803               	skipnc
   464  0036  0AF1               	incf	_a+1,f
   465  0037  3000               	movlw	0
   466  0038  07F1               	addwf	_a+1,f
   467                           
   468                           ;main.c: 83: b++;
   469  0039  3001               	movlw	1
   470  003A  07F2               	addwf	_b,f
   471  003B  1803               	skipnc
   472  003C  0AF3               	incf	_b+1,f
   473  003D  3000               	movlw	0
   474  003E  07F3               	addwf	_b+1,f
   475                           
   476                           ;main.c: 84: c++;
   477  003F  3001               	movlw	1
   478  0040  07F4               	addwf	_c,f
   479  0041  1803               	skipnc
   480  0042  0AF5               	incf	_c+1,f
   481  0043  3000               	movlw	0
   482  0044  07F5               	addwf	_c+1,f
   483                           
   484                           ;main.c: 85: d++;
   485  0045  3001               	movlw	1
   486  0046  07F6               	addwf	_d,f
   487  0047  1803               	skipnc
   488  0048  0AF7               	incf	_d+1,f
   489  0049  3000               	movlw	0
   490  004A  07F7               	addwf	_d+1,f
   491                           
   492                           ;main.c: 86: e++;
   493  004B  3001               	movlw	1
   494  004C  07F8               	addwf	_e,f
   495  004D  1803               	skipnc
   496  004E  0AF9               	incf	_e+1,f
   497  004F  3000               	movlw	0
   498  0050  07F9               	addwf	_e+1,f
   499                           
   500                           ;main.c: 87: if(a==10&&a1==1){
   501  0051  300A               	movlw	10
   502  0052  0670               	xorwf	_a,w
   503  0053  0471               	iorwf	_a+1,w
   504  0054  1D03               	btfss	3,2
   505  0055  285D               	goto	i1l703
   506  0056  0320               	decf	_a1,w
   507  0057  0421               	iorwf	_a1+1,w
   508  0058  1D03               	btfss	3,2
   509  0059  285D               	goto	i1l703
   510                           
   511                           ;main.c: 88: PORTDbits.RD0=0;
   512  005A  1008               	bcf	8,0	;volatile
   513                           
   514                           ;main.c: 89: a1=0;}
   515  005B  01A0               	clrf	_a1
   516  005C  01A1               	clrf	_a1+1
   517  005D                     i1l703:	
   518                           
   519                           ;main.c: 91: if(b==10&&b1==1){
   520  005D  300A               	movlw	10
   521  005E  0672               	xorwf	_b,w
   522  005F  0473               	iorwf	_b+1,w
   523  0060  1D03               	btfss	3,2
   524  0061  2869               	goto	i1l711
   525  0062  0322               	decf	_b1,w
   526  0063  0423               	iorwf	_b1+1,w
   527  0064  1D03               	btfss	3,2
   528  0065  2869               	goto	i1l711
   529                           
   530                           ;main.c: 92: PORTDbits.RD1=0;
   531  0066  1088               	bcf	8,1	;volatile
   532                           
   533                           ;main.c: 93: b1=0;}
   534  0067  01A2               	clrf	_b1
   535  0068  01A3               	clrf	_b1+1
   536  0069                     i1l711:	
   537                           
   538                           ;main.c: 95: if(c==10&&c1==1){
   539  0069  300A               	movlw	10
   540  006A  0674               	xorwf	_c,w
   541  006B  0475               	iorwf	_c+1,w
   542  006C  1D03               	btfss	3,2
   543  006D  2875               	goto	i1l719
   544  006E  0324               	decf	_c1,w
   545  006F  0425               	iorwf	_c1+1,w
   546  0070  1D03               	btfss	3,2
   547  0071  2875               	goto	i1l719
   548                           
   549                           ;main.c: 96: PORTDbits.RD2=0;
   550  0072  1108               	bcf	8,2	;volatile
   551                           
   552                           ;main.c: 97: c1=0;}
   553  0073  01A4               	clrf	_c1
   554  0074  01A5               	clrf	_c1+1
   555  0075                     i1l719:	
   556                           
   557                           ;main.c: 99: if(d==10&&d1==1){
   558  0075  300A               	movlw	10
   559  0076  0676               	xorwf	_d,w
   560  0077  0477               	iorwf	_d+1,w
   561  0078  1D03               	btfss	3,2
   562  0079  2881               	goto	i1l727
   563  007A  0326               	decf	_d1,w
   564  007B  0427               	iorwf	_d1+1,w
   565  007C  1D03               	btfss	3,2
   566  007D  2881               	goto	i1l727
   567                           
   568                           ;main.c: 100: PORTDbits.RD3=0;
   569  007E  1188               	bcf	8,3	;volatile
   570                           
   571                           ;main.c: 101: d1=0;}
   572  007F  01A6               	clrf	_d1
   573  0080  01A7               	clrf	_d1+1
   574  0081                     i1l727:	
   575                           
   576                           ;main.c: 103: if(e==10&&e1==1){
   577  0081  300A               	movlw	10
   578  0082  0678               	xorwf	_e,w
   579  0083  0479               	iorwf	_e+1,w
   580  0084  1D03               	btfss	3,2
   581  0085  288D               	goto	i1l735
   582  0086  0328               	decf	_e1,w
   583  0087  0429               	iorwf	_e1+1,w
   584  0088  1D03               	btfss	3,2
   585  0089  288D               	goto	i1l735
   586                           
   587                           ;main.c: 104: PORTDbits.RD4=0;
   588  008A  1208               	bcf	8,4	;volatile
   589                           
   590                           ;main.c: 105: e1=0;}
   591  008B  01A8               	clrf	_e1
   592  008C  01A9               	clrf	_e1+1
   593  008D                     i1l735:	
   594                           
   595                           ;main.c: 107: }
   596                           ;main.c: 108: TMR1IF=0;
   597  008D  100C               	bcf	12,0	;volatile
   598  008E                     L1:	
   599  008E  087D               	movf	??_ISR+3,w
   600  008F  00FF               	movwf	127
   601  0090  087C               	movf	??_ISR+2,w
   602  0091  008A               	movwf	10
   603  0092  087B               	movf	??_ISR+1,w
   604  0093  0084               	movwf	4
   605  0094  0E7A               	swapf	??_ISR^(0+-128),w
   606  0095  0083               	movwf	3
   607  0096  0EFE               	swapf	126,f
   608  0097  0E7E               	swapf	126,w
   609  0098  0009               	retfie
   610  0099                     __end_of_ISR:	
   611  007E                     btemp	set	126	;btemp
   612  007E                     wtemp	set	126
   613  007E                     wtemp0	set	126
   614  0080                     wtemp1	set	128
   615  0082                     wtemp2	set	130
   616  0084                     wtemp3	set	132
   617  0086                     wtemp4	set	134
   618  0088                     wtemp5	set	136
   619  007F                     wtemp6	set	127
   620  007E                     ttemp	set	126
   621  007E                     ttemp0	set	126
   622  0081                     ttemp1	set	129
   623  0084                     ttemp2	set	132
   624  0087                     ttemp3	set	135
   625  007F                     ttemp4	set	127
   626  007E                     ltemp	set	126
   627  007E                     ltemp0	set	126
   628  0082                     ltemp1	set	130
   629  0086                     ltemp2	set	134
   630  0080                     ltemp3	set	128
   631                           
   632                           	psect	intentry
   633  0004                     __pintentry:	
   634                           ;incstack = 0
   635                           ; Regs used in _ISR: [wreg+status,2+status,0]
   636                           
   637  0004                     interrupt_function:	
   638  007E                     saved_w	set	btemp
   639  0004  00FE               	movwf	btemp
   640  0005  0E03               	swapf	3,w
   641  0006  00FA               	movwf	??_ISR
   642  0007  0804               	movf	4,w
   643  0008  00FB               	movwf	??_ISR+1
   644  0009  080A               	movf	10,w
   645  000A  00FC               	movwf	??_ISR+2
   646  000B  1283               	bcf	3,5	;RP0=0, select bank0
   647  000C  1303               	bcf	3,6	;RP1=0, select bank0
   648  000D  087F               	movf	btemp+1,w
   649  000E  00FD               	movwf	??_ISR+3
   650  000F  120A  118A  282D   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      14
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                             _Timer1
 ---------------------------------------------------------------------------------
 (1) _Timer1                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer1

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      18       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      18      12        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Aug 23 17:32:27 2021

                      _a 0070                        _b 0072                        _c 0074  
                      _d 0076                        _e 0078              __CFG_CP$OFF 0000  
                     _a1 0020                       _b1 0022                       _c1 0024  
                     _d1 0026                       _e1 0028                      l771 00C3  
                    l763 00BA                      l755 00B1                      l747 00A6  
                    l779 00CC                      _GIE 005F                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      _RB3 0033  
                    _RB4 0034             __CFG_CPD$OFF 0000                      _ISR 002D  
                    fsr0 0004             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
                   ?_ISR 007A                     _PEIE 005E                     _TMR1 000E  
           __CFG_WRT$OFF 0000                     _main 0099                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 0012  
                   ttemp 007E                     wtemp 007E                    ??_ISR 007A  
                  ?_main 007A            __CFG_WDTE$OFF 0000                    i1l711 0069  
                  i1l703 005D                    i1l727 0081                    i1l719 0075  
                  i1l735 008D                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088            __CFG_PWRTE$ON 0000                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 0015  
           __end_of_main 00D6                   ??_main 0000                   _TMR1IE 0460  
                 _TMR1IF 0060                   _TMR1CS 0081                   _TMR1ON 0080  
                 _Timer1 00D6                   saved_w 007E  __end_of__initialization 0029  
         __pcstackCOMMON 007A               __pbssBANK0 0020                  ?_Timer1 007A  
             __pmaintext 0099               __pintentry 0004                  _T1CKPS0 0084  
                _T1CKPS1 0085          __size_of_Timer1 0010                  __ptext1 00D6  
                __ptext2 002D             __size_of_ISR 006C     end_of_initialization 0029  
              _PORTDbits 0008           __end_of_Timer1 00E6      start_initialization 0015  
            __end_of_ISR 0099                 ??_Timer1 0000              __pbssCOMMON 0070  
              ___latbits 0002            __pcstackBANK0 0000        interrupt_function 0004  
          __size_of_main 003D                 intlevel1 0000  
